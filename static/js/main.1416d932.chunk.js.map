{"version":3,"sources":["components/Import.jsx","sound/thump1.wav","sound/thump2.wav","components/MoveHistory.jsx","components/App.js","index.js"],"names":["Import","importPosition","useState","input","setInput","error","setError","placeholder","rows","cols","value","onChange","event","target","className","onClick","valid","setTimeout","MoveHistory","history","selectedMove","onClickMove","clickMove","historyIndex","map","move","i","turn","Math","floor","lastMove","length","color","whiteMove","san","blackMove","whiteClassNames","blackClassNames","App","orientation","setOrientation","position","setPosition","setHistory","fenHistory","setFenHistory","setSelectedMove","pieceSquare","setPieceSquare","squareStyles","setSquareStyles","dropSquareStyle","setDropSquareStyle","markedSquares","setMarkedSquares","game","useRef","useEffect","current","Chess","jumpToMove","console","log","undefined","squareStyling","addMove","fen","newHistory","verbose","newFen","playMoveSound","getLegalMoves","square","moves","to","combineSquareStyling","styleObj1","styleObj2","selectedSquare","styling","piece","get","backgroundColor","legalMoves","forEach","legalMove","background","borderRadius","sourceSquare","from","targetSquare","flags","includes","playPieceCaptureSfx","playPieceMoveSfx","useSound","moveSfx","volume","takeSfx","onKeyDown","key","tabIndex","Grid","container","width","onDrop","promotion","onMouseOverSquare","onMouseOutSquare","boardStyle","boxShadow","cursor","onDragOverSquare","onSquareClick","onSquareRightClick","updatedMarkedSquares","filter","el","reduce","styleObj","currentSquare","validation","validate_fen","load","style","left","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1416d932.chunk.js","sourcesContent":["import './Import.css';\r\nimport React, { useState } from 'react';\r\n\r\nexport default function Import({ importPosition }) {\r\n    const [input, setInput] = useState('');\r\n    const [error, setError] = useState(false);\r\n    \r\n    const errorMessage = 'Invalid FEN string';\r\n    const handleImport = () => {\r\n        setError(false);\r\n        const validation = importPosition(input);\r\n        if (!validation.valid) {\r\n            setTimeout(() => setError(true), 200);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <textarea placeholder='Input FEN string' rows='2' cols='77' value={input} onChange={event => setInput(event.target.value)} />\r\n            {error ? <p className='error-message'>{errorMessage}</p> : <br />}\r\n            <button onClick={handleImport}>Import</button>\r\n        </div>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/thump1.5dc21a1c.wav\";","export default __webpack_public_path__ + \"static/media/thump2.a452eeaf.wav\";","import './MoveHistory.css';\r\nimport React from 'react';\r\n\r\nexport default function MoveHistory({ history, selectedMove, onClickMove }) {\r\n    \r\n    const renderHistoryTable = () => {\r\n        return history.map((move, i, history) => {\r\n            const turn = Math.floor(i/2) + 1;\r\n            const lastMove = history.length && history.length-1;\r\n            if (move.color === 'b') {\r\n                const whiteMove = i >= 1 ? history[i-1].san : null;\r\n                const blackMove = move.san;\r\n                const whiteClassNames = (whiteMove === null\r\n                    ? 'empty-move'\r\n                    : (i-1 === selectedMove ? 'selected' : '') + ' move');\r\n                const blackClassNames = (i === selectedMove ? 'selected' : '') + ' move';\r\n                return (\r\n                    <tr key={i}>\r\n                        <td className='rowTurn'>{turn}</td>\r\n                        <td className={whiteClassNames} onClick={() => whiteMove && clickMove(i-1)}>{whiteMove || '...'}</td>\r\n                        <td className={blackClassNames} onClick={() => blackMove && clickMove(i)}>{blackMove}</td>\r\n                    </tr>\r\n                );\r\n            } else if (move.color === 'w' && i === lastMove) {\r\n                const whiteMove = move.san;\r\n                const whiteClassNames = `${i === selectedMove ? 'selected' : ''} move`;\r\n                return (\r\n                    <tr key={i}>\r\n                        <td className='rowTurn'>{turn}</td>\r\n                        <td className={whiteClassNames} onClick={() => clickMove(i)}>{whiteMove}</td>\r\n                        <td />\r\n                    </tr>\r\n                );\r\n            } else return undefined;\r\n        });\r\n    }\r\n\r\n    const clickMove = (historyIndex) => {\r\n        // console.log(historyIndex, history.slice(0, historyIndex+1).map(move => move.san));\r\n        onClickMove(historyIndex);\r\n    }\r\n\r\n    return (\r\n        <div className='box'>\r\n            <h3 className='header'>Move History</h3>\r\n            <table>\r\n                <tbody>\r\n                    {renderHistoryTable()}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}","import './App.css';\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport * as Chess from \"chess.js\";\r\nimport Chessboard from 'chessboardjsx';\r\nimport Import from './Import';\r\n\r\nimport useSound from 'use-sound';\r\nimport moveSfx from '../sound/thump1.wav';\r\nimport takeSfx from '../sound/thump2.wav';\r\nimport MoveHistory from './MoveHistory';\r\n\r\nexport default function App() {\r\n    const [orientation, setOrientation] = useState('white')\r\n    const [position, setPosition] = useState('start');\r\n    const [history, setHistory] = useState([]);\r\n    const [fenHistory, setFenHistory] = useState(['rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1']);\r\n    const [selectedMove, setSelectedMove] = useState(-1);\r\n\r\n    const [pieceSquare, setPieceSquare] = useState('');\r\n\r\n    const [squareStyles, setSquareStyles] = useState({});\r\n    const [dropSquareStyle, setDropSquareStyle] = useState({});\r\n    const [markedSquares, setMarkedSquares] = useState([]);\r\n\r\n\r\n    const game = useRef(null);\r\n    useEffect(() => {\r\n        game.current = new Chess();\r\n    }, []);\r\n\r\n    const importPosition = (fen) => {\r\n        const validation = game.current.validate_fen(fen)\r\n        console.log('Import:', validation);\r\n        if (validation.valid) {\r\n            setHistory([]);\r\n            setSquareStyles({});\r\n            game.current.load(fen);\r\n            setPosition(fen);\r\n        }\r\n        return validation;\r\n    };\r\n\r\n    const jumpToMove = (historyIndex) => {\r\n        console.log(fenHistory[historyIndex+1]);\r\n        setPosition('8/8/8/8/8/8/8/8 w - - 0 1'); // reset first\r\n        setTimeout(() => {\r\n            setPosition(fenHistory[historyIndex+1]);\r\n\r\n            setPieceSquare('');\r\n            setSelectedMove(historyIndex);\r\n            \r\n            const move = historyIndex >= 0 ? history[historyIndex] : undefined;\r\n            setSquareStyles(squareStyling('', move));\r\n        }, 1);\r\n    }\r\n\r\n    const addMove = (move) => {\r\n        setPosition(game.current.fen());\r\n        \r\n        const newHistory = game.current.history({ verbose: true })\r\n        setHistory(newHistory);\r\n        const newFen = game.current.fen();\r\n        setFenHistory([...fenHistory, newFen])\r\n        \r\n        setPieceSquare('');\r\n        setSelectedMove(newHistory.length-1);\r\n        \r\n        setSquareStyles(squareStyling('', move));\r\n        playMoveSound(move);\r\n    }\r\n\r\n    const flipOrientation = () => {\r\n        if (orientation === 'white') setOrientation('black');\r\n        else if (orientation === 'black') setOrientation('white');\r\n    }\r\n\r\n    const onDrop = ({ sourceSquare, targetSquare }) => {\r\n        // see if the move is legal\r\n        const move = game.current.move({\r\n            from: sourceSquare,\r\n            to: targetSquare,\r\n            promotion: \"q\" // always promote to a queen for example simplicity\r\n        });\r\n\r\n        // illegal move\r\n        if (move === null)\r\n            return;\r\n        else\r\n            addMove(move);\r\n    };\r\n\r\n    const getLegalMoves = square => {\r\n        const moves = game.current.moves({\r\n            square: square,\r\n            verbose: true\r\n        });\r\n\r\n        return moves.map(move => move.to);\r\n    };\r\n\r\n    const onMouseOverSquare = square => {\r\n        // showLegalMoves(square);\r\n    };\r\n\r\n    const onMouseOutSquare = square => {\r\n        // removeHighlightSquare(square);\r\n    }\r\n\r\n    // central squares get diff dropSquareStyles\r\n    const onDragOverSquare = square => {\r\n        if (markedSquares.length)\r\n            setMarkedSquares([]);\r\n        setDropSquareStyle(\r\n            square === \"e4\" || square === \"d4\" || square === \"e5\" || square === \"d5\"\r\n                ? { backgroundColor: \"cornFlowerBlue\" }\r\n                : { boxShadow: \"inset 0 0 1px 4px rgb(255, 255, 0)\" }\r\n        );\r\n    };\r\n\r\n    const onSquareClick = square => {\r\n        if (markedSquares.length)\r\n            setMarkedSquares([]);\r\n        if (pieceSquare === square) {\r\n            setPieceSquare('');\r\n            setSquareStyles(squareStyling(''));\r\n        } else {\r\n            let move = game.current.move({\r\n                from: pieceSquare,\r\n                to: square,\r\n                promotion: \"q\" // always promote to a queen for example simplicity\r\n            });\r\n    \r\n            // illegal move\r\n            if (move === null) {\r\n                setPieceSquare(square);\r\n                setSquareStyles(squareStyling(square));\r\n            }\r\n            // legal move\r\n            else if (move !== null) {\r\n                addMove(move);\r\n            }\r\n        }\r\n    };\r\n\r\n    const onSquareRightClick = square => {\r\n        let updatedMarkedSquares;\r\n        if (markedSquares.includes(square)) {\r\n            updatedMarkedSquares = markedSquares.filter(el => el !== square);\r\n            setMarkedSquares(updatedMarkedSquares);\r\n        } else {\r\n            updatedMarkedSquares = [...markedSquares, square];\r\n            setMarkedSquares(updatedMarkedSquares);\r\n        }\r\n        setSquareStyles(\r\n            combineSquareStyling(\r\n                squareStyling(''),\r\n                updatedMarkedSquares.reduce((styleObj, currentSquare) => {\r\n                    return {\r\n                        ...styleObj,\r\n                        [currentSquare]: { backgroundColor: \"rgba(205, 92, 92, 0.8)\" }\r\n                    }\r\n                }, {})\r\n            )\r\n        );\r\n    };\r\n\r\n    const combineSquareStyling = (styleObj1, styleObj2) => {\r\n        return {\r\n            ...styleObj1,\r\n            ...styleObj2\r\n        };\r\n    };\r\n\r\n    const squareStyling = (selectedSquare, move=undefined) => {\r\n        let styling = {};\r\n\r\n        // show selected piece highlighting\r\n        const turn = game.current.turn();\r\n        const piece = game.current.get(selectedSquare);\r\n        if (piece && (turn === piece.color)) {\r\n            styling[selectedSquare] = { backgroundColor: \"rgba(255, 255, 0, 0.3)\" };\r\n\r\n            // show legal move highlighting\r\n            const legalMoves = getLegalMoves(selectedSquare);\r\n            legalMoves.forEach(legalMove => {\r\n                styling[legalMove] = {\r\n                    background: \"radial-gradient(circle, #ffff00 20%, transparent 30%)\",\r\n                    borderRadius: \"50%\"\r\n                }\r\n            });\r\n        }\r\n    \r\n        // show last-move highlighting\r\n        const lastMove = move;\r\n        if (lastMove) {\r\n            const sourceSquare = lastMove.from;\r\n            const targetSquare = lastMove.to;\r\n\r\n            styling[sourceSquare] = { backgroundColor: \"rgba(0, 200, 0, 0.3)\" };\r\n            styling[targetSquare] = { backgroundColor: \"rgba(0, 200, 0, 0.3)\" };\r\n        }\r\n    \r\n        return styling;\r\n    };\r\n\r\n    const handleKeyDown = event => {\r\n        if (event.key === 'ArrowLeft') {\r\n            if (selectedMove >= 0)\r\n                jumpToMove(selectedMove-1);\r\n        } else if (event.key === 'ArrowRight') {\r\n            if (selectedMove+1 < history.length)\r\n                jumpToMove(selectedMove+1);\r\n        } else if (event.key === '0') {\r\n            jumpToMove(0);\r\n        }\r\n    }\r\n\r\n    const playMoveSound = move => {\r\n        if (move == null)\r\n            return;\r\n\r\n        if (move.flags.includes('c') || move.flags.includes('e')) { // capture; en-passant\r\n            playPieceCaptureSfx();\r\n        } else if (move.flags.includes('k') || move.flags.includes('q')) { // castle\r\n            playPieceCaptureSfx();\r\n            setTimeout(() => playPieceMoveSfx(), 100);\r\n        } else {\r\n            playPieceMoveSfx();\r\n        }\r\n    };\r\n\r\n    const [playPieceMoveSfx] = useSound(\r\n        moveSfx,\r\n        { volume: 1.5 }\r\n    );\r\n\r\n    const [playPieceCaptureSfx] = useSound(\r\n        takeSfx,\r\n        { volume: 1.5 }\r\n    );\r\n\r\n    return (\r\n        <div className=\"App\" onKeyDown={handleKeyDown} tabIndex=\"0\">\r\n            <h1>Chess</h1>\r\n            <Grid container>\r\n                <div>\r\n                    <Chessboard\r\n                        position={position}\r\n                        orientation={orientation}\r\n                        width={600}\r\n                        onDrop={onDrop}\r\n                        onMouseOverSquare={onMouseOverSquare}\r\n                        onMouseOutSquare={onMouseOutSquare}\r\n                        boardStyle={{\r\n                            borderRadius: \"5px\",\r\n                            boxShadow: `0 5px 15px rgba(0, 0, 0, 0.5)`,\r\n                            cursor: 'pointer'\r\n                        }}\r\n                        squareStyles={squareStyles}\r\n                        dropSquareStyle={dropSquareStyle}\r\n                        onDragOverSquare={onDragOverSquare}\r\n                        onSquareClick={onSquareClick}\r\n                        onSquareRightClick={onSquareRightClick}\r\n                    />\r\n                    <br />\r\n                    <Import importPosition={importPosition} />\r\n                    <br />\r\n                    <button onClick={flipOrientation}>Flip</button>\r\n                </div>\r\n                <div style={{ position: 'absolute', left: '1000px' }}>\r\n                    <MoveHistory\r\n                        history={history}\r\n                        selectedMove={selectedMove}\r\n                        onClickMove={jumpToMove}\r\n                    />\r\n                </div>\r\n            </Grid>\r\n            <footer>\r\n                <div>\r\n                    Built by <a href='https://hwkerr.github.io'>Harrison Kerr</a>\r\n                </div>\r\n            </footer>\r\n        </div>\r\n    );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}